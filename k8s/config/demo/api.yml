# Boardr API service
---
apiVersion: v1
kind: Service
metadata:
  name: boardr-api
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 4000
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: boardr
    app.kubernetes.io/instance: boardr-vagrant

# Boardr API deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boardr-api
spec:
  replicas: 1
  selector:
    matchLabels: &boardr-api-labels
      app.kubernetes.io/component: api
      app.kubernetes.io/part-of: boardr
      app.kubernetes.io/instance: boardr-vagrant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: phoenix
        app.kubernetes.io/version: "0.1.0"
        <<: *boardr-api-labels
        boardr.alphahydrae.io/cluster: main
    spec:
      containers:
        - name: phoenix
          image: "localhost:32000/boardr-api:0.1.0"
          imagePullPolicy: Always
          env:
            - name: BOARDR_BASE_URL
              value: http://boardr.vagrant
            - name: BOARDR_DATABASE_URL
              value: ecto://boardr:changeme@boardr-db/boardr
            - name: BOARDR_LOG_LEVEL
              value: debug
            - name: BOARDR_K8S_NODE_BASENAME
              value: boardr
            - name: BOARDR_K8S_SELECTOR
              value: boardr.alphahydrae.io/cluster=main
            - name: BOARDR_PORT
              value: "4000"
            - name: BOARDR_RELEASE_NODE_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: BOARDR_RELEASE_NODE_NAME
              value: boardr
            - name: BOARDR_SECRET
              valueFrom:
                secretKeyRef:
                  name: boardr-secret
                  key: secret
            - name: RELEASE_COOKIE
              valueFrom:
                secretKeyRef:
                  name: boardr-release-cookie
                  key: cookie